<?php
error_reporting(1);
class tms_estoqueassuntos extends Controllers {

    public function __construct(){
        parent::__construct();
        session_start();
        $this->validasessao();
    }

    public function home() {
        include 'includes/config/config.php';

		$idwidget = $this->getParam('idwidget');

        $smarty = $this->retornaSmarty();

		$smarty->assign('idwidget', $idwidget);
        $smarty->display('tms_estoqueassuntos.tpl.html');
    }

    public function json() 
	{
        include 'includes/config/config.php';

		$bd = new dash_model();
		$rs = $bd->getWidgetParam($this->getParam('idwidget'));



        $inicio = $rs->fields['field1'];;
        $limit  = $rs->fields['field2'] ;

        $parts = explode('-', $inicio);
        if (!checkdate($parts[1], $parts[2], $parts[0])) {
            echo 'Data inválida no cadastro do widget [campo 1], formato correto AAA-MM-DD, valor atual: ' . $inicio;
        }
        if (!is_numeric($limit)) {
            echo 'Valor não é numérico no cadastro de widget [campo 2], valor atual: ' . $limit;
        }

        $fim = date("Y-m-d") ;
        $days = $this->dataNumeroDias($inicio,$fim);

        $DB = new tms_estoqueassuntos_model();
        $rsUser = $DB->getAssuntosPorUsuario($inicio,$_SESSION['SES_COD_USUARIO'],$limit);
        $totalUsuarios = $rsUser->RecordCount();

        if ($rs->fields) 
		{
			$i = 1;
			while (!$rsUser->EOF)
			{	
				$vlrAnterior = 0;
				//$rset = $bd->getRequestsByDay($rs->fields['idperson_creator'],$year);
                $rset = $DB->getQuestoesPorDia($_SESSION['SES_COD_USUARIO'],$rsUser->fields['idsubassunto'],$inicio);
				//$timestamp = strtotime('-'.$days. ' days');
				//$dtinicio = date('Y-m-d', $timestamp) ;

				$k=1;
				while (!$rset->EOF) 
				{
					$name = utf8_decode($rsUser->fields['nome']) ;
					$aDatas[$name][$rset->fields['dtcadastro']] =  $rset->fields['total'];
					$k++;
					$rset->MoveNext();
				}
				$rsUser->MoveNext();
			}
			$timestamp = strtotime('-'.$days. ' days');
			$dtinicio = date('Y-m-d', $timestamp) ;

			$cont = 0 ;
			$first = true ;
			foreach ($aDatas as $i1 => $n1)     
			{
				$first = true ;
				$ant = 0 ;
				for ($k = 1; $k <= $days; $k++) 
				{
					if ($first) {
						$dtcompara = $dtinicio;
						$first = false;
						$ant = 0 ;
					} else {
						$adiciona = $dtinicio ."+". $k . " days";
						$compara = strtotime($adiciona) ;
						$dtcompara = date('Y-m-d', $compara);
					}

					if (array_key_exists($dtcompara, $aDatas[$i1]) )
					{
						$aDatas[$i1][$dtcompara] = $aDatas[$i1][$dtcompara] + $ant;
						$ant = $aDatas[$i1][$dtcompara] ;
					}
					else 
					{
						$aDatas[$i1][$dtcompara] = $ant;
					}
				}
			}
			
			
			$timestamp = strtotime('-'.$days. ' days');
			$dtinicio = date('Y-m-d', $timestamp) ;

			$json  = "[";
			$cont=0;
			foreach ($aDatas as $i1 => $n1)     
			{
				$cont++;
				for ($k = 1; $k <= $days; $k++) 
				{
					$adiciona = $dtinicio ."+". $k . " days";
					$compara = strtotime($adiciona) ;
					$dtcompara = date('Y-m-d', $compara);
					if (array_key_exists($dtcompara, $aDatas[$i1]) )
					{
						$imp = $aDatas[$i1][$dtcompara] ;
					} 
					else 
					{
						$imp = 0 ;	
					}
					$aImpressoes[$k] 	= $imp; 		
					$aEixoX[$k] 		= strtotime($dtcompara . " UTC") * 1000; 
				}
					
				$json .= $this->montajson(utf8_encode($i1),$aImpressoes,$aEixoX);
				if ($k != $days and $cont !=$totalUsuarios )
				{
					$json .= ",";
				}	

			}
			$json .= "]";

            //$json = '[{ "label": "Rodrigo Leite Duval","data":[[1463529600000,51], [1463443200000,51], [1463356800000,51], [1463270400000,1], [1463184000000,1], [1463097600000,1], [1463011200000,1], [1462924800000,1], [1462838400000,1], [1462752000000,0], [1462665600000,0], [1462579200000,0], [1462492800000,0], [1462406400000,0], [1462320000000,0], [1462233600000,0], [1462147200000,0], [1462060800000,0], [1461974400000,0], [1461888000000,0], [1461801600000,0], [1461715200000,0], [1461628800000,0], [1461542400000,0], [1461456000000,0], [1461369600000,0], [1461283200000,0], [1461196800000,0], [1461110400000,0], [1461024000000,0], [1460937600000,0], [1460851200000,0], [1460764800000,0], [1460678400000,0], [1460592000000,0], [1460505600000,0], [1460419200000,0], [1460332800000,0], [1460246400000,0], [1460160000000,0], [1460073600000,0], [1459987200000,0], [1459900800000,0], [1459814400000,0], [1459728000000,0], [1459641600000,0], [1459555200000,0], [1459468800000,0], [1459382400000,0], [1459296000000,0], [1459209600000,0], [1459123200000,0], [1459036800000,0], [1458950400000,0], [1458864000000,0], [1458777600000,0], [1458691200000,0], [1458604800000,0], [1458518400000,0], [1458432000000,0], [1458345600000,0], [1458259200000,0], [1458172800000,0], [1458086400000,0], [1458000000000,0], [1457913600000,0], [1457827200000,0], [1457740800000,0], [1457654400000,0], [1457568000000,0], [1457481600000,0], [1457395200000,0], [1457308800000,0], [1457222400000,0], [1457136000000,0], [1457049600000,0], [1456963200000,0], [1456876800000,0], [1456790400000,0], [1456704000000,0], [1456617600000,0], [1456531200000,0], [1456444800000,0], [1456358400000,0], [1456272000000,0], [1456185600000,0], [1456099200000,0], [1456012800000,0], [1455926400000,0], [1455840000000,0], [1455753600000,0], [1455667200000,0], [1455580800000,0], [1455494400000,0], [1455408000000,0], [1455321600000,0], [1455235200000,0], [1455148800000,0], [1455062400000,0], [1454976000000,0], [1454889600000,0], [1454803200000,0], [1454716800000,0], [1454630400000,0], [1454544000000,0], [1454457600000,0], [1454371200000,0], [1454284800000,0], [1454198400000,0], [1454112000000,0], [1454025600000,0], [1453939200000,0], [1453852800000,0], [1453766400000,0], [1453680000000,0], [1453593600000,0], [1453507200000,0], [1453420800000,0], [1453334400000,0], [1453248000000,0], [1453161600000,0], [1453075200000,0], [1452988800000,0], [1452902400000,0], [1452816000000,0], [1452729600000,0], [1452643200000,0], [1452556800000,0], [1452470400000,0], [1452384000000,0], [1452297600000,0], [1452211200000,0], [1452124800000,0], [1452038400000,0], [1451952000000,0], [1451865600000,0], [1451779200000,0], [1451692800000,0]]},{ "label": "Ricardo Vaz Ribeiro         ","data":[[1463529600000,7], [1463443200000,7], [1463356800000,0], [1463270400000,0], [1463184000000,0], [1463097600000,0], [1463011200000,0], [1462924800000,0], [1462838400000,0], [1462752000000,0], [1462665600000,0], [1462579200000,0], [1462492800000,0], [1462406400000,0], [1462320000000,0], [1462233600000,0], [1462147200000,0], [1462060800000,0], [1461974400000,0], [1461888000000,0], [1461801600000,0], [1461715200000,0], [1461628800000,0], [1461542400000,0], [1461456000000,0], [1461369600000,0], [1461283200000,0], [1461196800000,0], [1461110400000,0], [1461024000000,0], [1460937600000,0], [1460851200000,0], [1460764800000,0], [1460678400000,0], [1460592000000,0], [1460505600000,0], [1460419200000,0], [1460332800000,0], [1460246400000,0], [1460160000000,0], [1460073600000,0], [1459987200000,0], [1459900800000,0], [1459814400000,0], [1459728000000,0], [1459641600000,0], [1459555200000,0], [1459468800000,0], [1459382400000,0], [1459296000000,0], [1459209600000,0], [1459123200000,0], [1459036800000,0], [1458950400000,0], [1458864000000,0], [1458777600000,0], [1458691200000,0], [1458604800000,0], [1458518400000,0], [1458432000000,0], [1458345600000,0], [1458259200000,0], [1458172800000,0], [1458086400000,0], [1458000000000,0], [1457913600000,0], [1457827200000,0], [1457740800000,0], [1457654400000,0], [1457568000000,0], [1457481600000,0], [1457395200000,0], [1457308800000,0], [1457222400000,0], [1457136000000,0], [1457049600000,0], [1456963200000,0], [1456876800000,0], [1456790400000,0], [1456704000000,0], [1456617600000,0], [1456531200000,0], [1456444800000,0], [1456358400000,0], [1456272000000,0], [1456185600000,0], [1456099200000,0], [1456012800000,0], [1455926400000,0], [1455840000000,0], [1455753600000,0], [1455667200000,0], [1455580800000,0], [1455494400000,0], [1455408000000,0], [1455321600000,0], [1455235200000,0], [1455148800000,0], [1455062400000,0], [1454976000000,0], [1454889600000,0], [1454803200000,0], [1454716800000,0], [1454630400000,0], [1454544000000,0], [1454457600000,0], [1454371200000,0], [1454284800000,0], [1454198400000,0], [1454112000000,0], [1454025600000,0], [1453939200000,0], [1453852800000,0], [1453766400000,0], [1453680000000,0], [1453593600000,0], [1453507200000,0], [1453420800000,0], [1453334400000,0], [1453248000000,0], [1453161600000,0], [1453075200000,0], [1452988800000,0], [1452902400000,0], [1452816000000,0], [1452729600000,0], [1452643200000,0], [1452556800000,0], [1452470400000,0], [1452384000000,0], [1452297600000,0], [1452211200000,0], [1452124800000,0], [1452038400000,0], [1451952000000,0], [1451865600000,0], [1451779200000,0], [1451692800000,0]]},{ "label": "Joel Martins Rodrigues","data":[[1463529600000,1], [1463443200000,1], [1463356800000,1], [1463270400000,1], [1463184000000,1], [1463097600000,1], [1463011200000,0], [1462924800000,0], [1462838400000,0], [1462752000000,0], [1462665600000,0], [1462579200000,0], [1462492800000,0], [1462406400000,0], [1462320000000,0], [1462233600000,0], [1462147200000,0], [1462060800000,0], [1461974400000,0], [1461888000000,0], [1461801600000,0], [1461715200000,0], [1461628800000,0], [1461542400000,0], [1461456000000,0], [1461369600000,0], [1461283200000,0], [1461196800000,0], [1461110400000,0], [1461024000000,0], [1460937600000,0], [1460851200000,0], [1460764800000,0], [1460678400000,0], [1460592000000,0], [1460505600000,0], [1460419200000,0], [1460332800000,0], [1460246400000,0], [1460160000000,0], [1460073600000,0], [1459987200000,0], [1459900800000,0], [1459814400000,0], [1459728000000,0], [1459641600000,0], [1459555200000,0], [1459468800000,0], [1459382400000,0], [1459296000000,0], [1459209600000,0], [1459123200000,0], [1459036800000,0], [1458950400000,0], [1458864000000,0], [1458777600000,0], [1458691200000,0], [1458604800000,0], [1458518400000,0], [1458432000000,0], [1458345600000,0], [1458259200000,0], [1458172800000,0], [1458086400000,0], [1458000000000,0], [1457913600000,0], [1457827200000,0], [1457740800000,0], [1457654400000,0], [1457568000000,0], [1457481600000,0], [1457395200000,0], [1457308800000,0], [1457222400000,0], [1457136000000,0], [1457049600000,0], [1456963200000,0], [1456876800000,0], [1456790400000,0], [1456704000000,0], [1456617600000,0], [1456531200000,0], [1456444800000,0], [1456358400000,0], [1456272000000,0], [1456185600000,0], [1456099200000,0], [1456012800000,0], [1455926400000,0], [1455840000000,0], [1455753600000,0], [1455667200000,0], [1455580800000,0], [1455494400000,0], [1455408000000,0], [1455321600000,0], [1455235200000,0], [1455148800000,0], [1455062400000,0], [1454976000000,0], [1454889600000,0], [1454803200000,0], [1454716800000,0], [1454630400000,0], [1454544000000,0], [1454457600000,0], [1454371200000,0], [1454284800000,0], [1454198400000,0], [1454112000000,0], [1454025600000,0], [1453939200000,0], [1453852800000,0], [1453766400000,0], [1453680000000,0], [1453593600000,0], [1453507200000,0], [1453420800000,0], [1453334400000,0], [1453248000000,0], [1453161600000,0], [1453075200000,0], [1452988800000,0], [1452902400000,0], [1452816000000,0], [1452729600000,0], [1452643200000,0], [1452556800000,0], [1452470400000,0], [1452384000000,0], [1452297600000,0], [1452211200000,0], [1452124800000,0], [1452038400000,0], [1451952000000,0], [1451865600000,0], [1451779200000,0], [1451692800000,0]]}]';
			echo $json;
			
		}	
		
    }
		
    
	public function montajson($label,$array,$hora) 
	{
		$max = count($array);
		$json .= "{";	
		$json .= " \"label\": \"" . $label . "\",";
		$k=0;
		for($i=$max; $i>=1; $i--)
		{
			if ($i==$max) {
				$json .= "\"data\":[";
			}
			$json .= "[" . $hora[$i] . "," . $array[$i] . "]";
			if ($i > 1) 
			{
				$json .= ", " ; 
			}
			if ($i == 1) 
			{
				$json .= "]" ; 
			}
			$k++;
		}
		$json .= "}";

		return $json;
	}


	public function diasDatas($data_inicial,$data_final)
	{
		$time_inicial = strtotime($data_inicial);
		$time_final = strtotime($data_final);
		// Calcula a diferença de segundos entre as duas datas:
		$diferenca = $time_final - $time_inicial; 
		// Calcula a diferença de dias
		$dias = (int)floor( $diferenca / (60 * 60 * 24)); 
		return $dias;
	}


}




?>